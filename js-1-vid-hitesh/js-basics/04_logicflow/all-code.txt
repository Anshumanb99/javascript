//higherOrderLoop.js

//["","",""]
//[{},{},{}]

const arr=[1,2,3,4,5];
//for of
for (const iterator of arr) {
    console.log(iterator);
}

const greetings="Hello World";
for (const iterator of greetings) {
    console.log(iterator);
}

//maps: unique values and order is preserved
const map=new Map();
map.set("IN","India");
map.set("USA","United states of america");
map.set("Fr","France");
console.log(map);

for (const key of map) {
    console.log(key);
}
for (const [key,value] of map) {
    console.log(key,":_:",value);
}


--------------------------------------------------------------------------------------------------------
//higherOrderFunction.js

const coding=["js","ruby","java","python","cpp"];

coding.forEach((item)=>{
console.log(item);
});

function printMe(item){
    console.log(`this is ${item}`)
}
coding.forEach(printMe);


//forEach along with item also gets index and array in return
coding.forEach((item,index,arr)=>{
    console.log(item,index,arr);
});

const myCoding=[
    {
        languageName:"javascript",
        languageFileName:"js"
    },
    {
        languageName:"java",
        languageFileName:"java"
    },
    {
        languageName:"python",
        languageFileName:"py"
    },
    
]
myCoding.forEach((item)=>{
    console.log(`${item.languageName} is having file name ${item.languageFileName}`)
});


//for each never return any value
// const values=coding.forEach((item)=>{
//     console.log(item);
// });
// console.log(values);


//filter
const myNums=[1,2,3,4,5,6,7,8,9,10];

const result=myNums.filter((num)=>{
    return num>4;
});
console.log(result);

const newNums=[];
myNums.forEach((num)=>{
    if(num>6){
        newNums.push(num);
    }
});
console.log(newNums);


const books = [
    { title: 'Book One', genre: 'Fiction', publish: 1981, edition: 2004 },
    { title: 'Book Two', genre: 'Non-Fiction', publish: 1992, edition: 2008 },
    { title: 'Book Three', genre: 'History', publish: 1999, edition: 2007 },
    { title: 'Book Four', genre: 'Non-Fiction', publish: 1989, edition: 2010 },
    { title: 'Book Five', genre: 'Science', publish: 2009, edition: 2014 },
    { title: 'Book Six', genre: 'Fiction', publish: 1987, edition: 2010 },
    { title: 'Book Seven', genre: 'History', publish: 1986, edition: 1996 },
    { title: 'Book Eight', genre: 'Science', publish: 2011, edition: 2016 },
    { title: 'Book Nine', genre: 'Non-Fiction', publish: 1981, edition: 1989 },
  ];
 
  const userBooks=books.filter((bk)=> bk.genre=="History");
console.log(userBooks);
  const userBooks2=books.filter(


    //   (bk)=>{
    //  return bk.genre=="History";
    //         }

    // (bk)=>{return bk.publish>2000}

    (bk)=>{return bk.genre==="History" && bk.publish>=1995}
  
  
  );
  console.log(userBooks2);

--------------------------------------------------------------------------------------------------------------------

//mapMethodDemo.js

const myNumbers=[1,2,3,4,5,6,7,8,9,10];
// console.log(myNumbers.map((num=>{return num*10;})));
// const newNums=myNumbers.map((num)=>num+10);
// console.log(newNums);


//chaining
const newNums=myNumbers.
                map((num)=>num*10).
                map((num)=>num+1);

console.log(newNums);

const newNums1=myNumbers.
                map((num)=>num*10).
                map((num)=>num+1).
                filter((num)=>num>50);

console.log(newNums1);

-----------------------------------------------------------------------------------------

//objectIterate.js

const myObject={
    js:"javascripyt",
    cpp:"C++",
    rb:"ruby",
    swift:"Swift by apple"
}

for (const key in myObject) {
    console.log(`${key} shortcut for ${myObject[key]}`);
}

const programming=["js","rb","py","java","cpp"];

for (const key in programming) {

  console.log(`${key} for ${programming[key]}`);
}



//map is not iteratable
----------------------------------------------------------------------------------------------------------

//one.js

//=== also cheks type along with value
console.log(2=="2")
console.log(2==="2")

const userLoggedIn=true;
const debitCard=true;
const loggedInFromGoogle=false;
const loggedInFromEmail=true;
let user="guest";

if(userLoggedIn && debitCard && 2==2){
    console.log("Allow to buy course");
}

if(loggedInFromGoogle||loggedInFromEmail|| user=="guest"){
    console.log("User logged in");
}
--------------------------------------------------------------------------------------------------------------

//reduceMethod.js

//initial value is added at the first to the accumulator and thenthe accumulator stores the value of accumulator and current value.

const array1=[1,2,3,4];
const initialValue=0;
const sumWithInitial=array1.reduce(
    (accumulator,currentValue)=>accumulator+currentValue,initialValue
);
console.log(sumWithInitial);

const myNums=[1,2,3]
// const myTotal=myNums.reduce(function(accumulator,currentValue){
//     return accumulator+currentValue;
// },0)
const myTotal=myNums.reduce((acc,curValue)=>{
   console.log(`accumulator=${acc} and current VAlue=${curValue}`);
    return acc+curValue;
},3)
console.log(myTotal);

const shoppingCart=[
    {
        languageName:"javascript",
        languageFileName:"js",
        price:999
    },
    {
        languageName:"java",
        languageFileName:"java",
        price:1999
    },
    {
        languageName:"python",
        languageFileName:"py",
        price:2999
    },
    
]

const priceToPay=shoppingCart.reduce((accumulator,item)=>{
return accumulator+item.price;
},0);
console.log(priceToPay);

--------------------------------------------------------------------------------------------------

//switch.js

// switch (key) {
//     case value:
        
//         break;

//     default:
//         break;
// }

const month=3;

switch (month) {
    case 1:
        console.log("janruary")
        break;
    case 2:
        console.log("february")
        break;
    case 3:
        console.log("march")
        break;
        

    default:
        console.log("some other month")
        break;
}

const day="tuesday";

switch (day) {
    case "monday":
        console.log("monday")
        break;
    case "tuesday":
        console.log("tuesday")
        break;
    case "wednesday":
        console.log("wednesday")
        break;
        

    default:
        console.log("some other day")
        break;
}


for(let i=0;i<10;i++){
    if(i==5){
        // continue;
        break;
    }
    console.log(i);
}

----------------------------------------------------------------------------------------------

//truthyFalsy.js

const userEmail="h@gmail.com";

//falsy value- false,0,-0,BigInt 0n,"",null,undefined,NaN
//truthy value- everything except falsy values
//special truthy values- "0","false"," ",[],{},function(){}

//check array is empty
const arr=[];
if(arr.length===0){
    console.log("Its an empty array");
}

//check object is empty
const empObj={};
if(Object.keys(empObj).length===0){
    console.log("Its an empty object");
}